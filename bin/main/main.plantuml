@startuml

title __MAIN's Class Diagram__\n

  package main {
    abstract class Car {
        - nrDoors : int
        # enginePower : double
        - currentSpeed : double
        - color : Color
        + point : Point
        + Car()
        + getCurrentSpeed()
        + getColor()
        + setColor()
        + startEngine()
        + stopEngine()
        {abstract} + speedFactor()
        + incrementSpeed()
        + decrementSpeed()
        + getDirection()
        + gas()
        + brake()
        + move()
        + getNrDoors()
    }
  }
  

  package main {
    abstract class Direction {
        # angle : int
        + Direction()
        {abstract} + getAngle()
        + setAngle()
        + addAngle()
        {abstract} + move()
    }
  }
  

  package main {
    interface IMoveable {
        {abstract} + move()
        {abstract} + turnLeft()
        {abstract} + turnRight()
    }
  }
  

  package main {
    class Perpendicular {
        + Perpendicular()
        + getAngle()
        + addAngle()
        + move()
    }
  }
  

  package main {
    class Saab95 {
        - turboOn : boolean
        + Saab95()
        + setTurboOn()
        + setTurboOff()
        + speedFactor()
        + turnLeft()
        + turnRight()
        + getTurboStatus()
    }
  }
  

  package main {
    class Volvo240 {
        {static} - trimFactor : double
        + Volvo240()
        + speedFactor()
        + turnLeft()
        + turnRight()
    }
  }
  

  Car -up-|> IMoveable
  Car o-- Direction : direction
  Perpendicular -up-|> Direction


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
